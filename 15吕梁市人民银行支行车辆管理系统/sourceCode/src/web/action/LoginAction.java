/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package web.action;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import service.IUserService;
import web.form.LoginForm;

import common.util.BeanFactory;
import common.util.MD5;
import common.util.ip.IPSeeker;
import common.util.ip.Utility;

import dao.bean.User;

/** 
 * MyEclipse Struts
 * Creation date: 04-16-2002
 * 
 * XDoclet definition:
 * @struts.action path="/loginAction" name="LoginForm" input="/pages/login.jsp" scope="request"
 * @struts.action-forward name="success" path="/pages/member/activity.jsp" redirect="true"
 * @struts.action-forward name="failure" path="/pages/login.jsp" redirect="true"
 */
public class LoginAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginform = (LoginForm) form;
		HttpSession session=request.getSession();
		String username = loginform.getUserName();
		MD5 md5=MD5.getInstance();
		String passwd =loginform.getPasswd();
		String password=md5.getMD5Str(passwd);
		boolean autoLogin = loginform.getAutoLogin();
		IUserService service = (IUserService) BeanFactory
				.getBean("userService");
		try {
			User user=service.login(username, password);
			session.setAttribute("user", user);
			if(autoLogin==true){
				Cookie namecookie=new Cookie("username", username);
				namecookie.setMaxAge(30000);
				namecookie.setPath("/");
				Cookie passwdcookie=new Cookie("passwd",passwd);
				passwdcookie.setMaxAge(30000);
				passwdcookie.setPath("/");
				response.addCookie(namecookie);
				response.addCookie(passwdcookie);
				
			}
			IPSeeker seeker=IPSeeker.getInstance();
			String ip=request.getLocalAddr();
			String country=seeker.getCountry(ip);
			String area=seeker.getArea(ip);
			String address=country+" : "+area;
			session.setAttribute("ip", address);
			return mapping.findForward("success");
		} catch (Exception e) {
			e.printStackTrace();
			session.setAttribute("message", e.getMessage());
			return mapping.findForward("failure");
		}
	}
}
