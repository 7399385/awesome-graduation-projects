/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package web.action;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import service.IUserService;
import web.form.ModifyUserInfoForm;

import common.util.BeanFactory;
import common.util.MD5;

import dao.bean.User;

/**
 * MyEclipse Struts Creation date: 04-19-2002
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/modifyUserInfo" name="modifyUserInfoForm"
 *                input="/pages/member/modify.jsp" scope="request"
 * @struts.action-forward name="success" path="/pages/member/activity.jsp"
 *                        redirect="true"
 * @struts.action-forward name="failure" path="/pages/member/modify.jsp"
 *                        redirect="true"
 */
public class ModifyUserInfoAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ModifyUserInfoForm modifyform = (ModifyUserInfoForm) form;
		
		String oldpasswd = modifyform.getOldPasswd();
		String newpasswd = modifyform.getNewPasswd();
		
		String passwdquestion = modifyform.getPasswdQuestion();
		String passwdanswer = modifyform.getPasswdAnswer();
		String gender = modifyform.getGender();
		long age = modifyform.getAge();
		String phone = modifyform.getPhone();
		String address = modifyform.getAddress();
		FormFile icon = modifyform.getIcon();
		HttpSession session = request.getSession();
		User user = (User) session.getAttribute("user");
		MD5 md5=MD5.getInstance();
		if (!user.getPassword().equals(md5.getMD5ofStr(oldpasswd))) {
			session.setAttribute("message", "对不起,您输入旧密码错误!");
			return mapping.findForward("failure");
		}
		if (!icon.equals("")&&icon.toString().length()!=0) {
			ServletContext context = session.getServletContext();
			String path = context.getRealPath("/");
			path = path + "images/" + user.getNickname() + "/";
			String webpath = "../../../images/" + user.getNickname() + "/"
					+ icon.getFileName();
			// 把相处路径保存到数据库中
			InputStream is = null;
			FileOutputStream fos = null;
			try {
				File file = new File(path);
				if (!file.exists()) {
					file.mkdir();
				}
				fos = new FileOutputStream(path + icon.getFileName());
				is = icon.getInputStream();
				byte[] buffer = new byte[8192];
				int count = 0;
				while ((count = is.read(buffer)) != -1) {
					fos.write(buffer, 0, count);
				}
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				try {
					is.close();
					fos.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			user.setIcon(webpath);
		}
		user.setPassword(md5.getMD5Str(newpasswd));
		user.setPasswdquestion(passwdquestion);
		user.setPasswdanswer(passwdanswer);
		user.setGender(gender);
		user.setAddress(address);
		user.setAge(age);
		user.setPhone(phone);
		IUserService service = (IUserService) BeanFactory
				.getBean("userService");
		try {
			service.modify(user);
		} catch (Exception e) {
			e.printStackTrace();
			session.setAttribute("message", e.getMessage());
			return mapping.findForward("failure");
		}
		session.setAttribute("user", user);
		return mapping.findForward("success");
	}
}