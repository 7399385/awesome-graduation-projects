package zhanlang.service.operate;

import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.Date;

import zhanlang.entity.Book;
import zhanlang.entity.Person;



public class ListenThread implements Runnable{
	private Socket socket;
	
	public ListenThread(Socket socket) {
		super();
		this.socket = socket;
	}
	/**
	 * 用来处理每个用户,每个用户一个线程
	 */
	@Override
	public void run() {
		Person person = null ;
		while(true) {
				//输入流
				//接受客户端传过来的person对象
				//读一个对象
				Object object = null;
				ChooseOperation co=new ChooseOperation();
				ObjectInputStream ois = null;
				ObjectOutputStream oos=null;
				Date d=new Date();
				
				try {
					InputStream is=this.socket.getInputStream();
					ois = new ObjectInputStream(is);
					object = ois.readObject();
				} catch (ClassNotFoundException e) {
					e.printStackTrace();
				} catch (IOException e) {
					System.out.println(Thread.currentThread().getName()+"---"+person.getUserName()+" 用户断开！"+"时间是："+d);
					//e.printStackTrace();
					return ;
				}
			
				try {
					oos=new ObjectOutputStream(this.socket.getOutputStream());
				} catch (IOException e) {
					//e.printStackTrace();
					System.out.println(Thread.currentThread().getName()+"---"+person.getUserName()+" 用户断开！"+"时间是："+d);
					return ;
				}
				

				//输出流
				
				//实现根据传过来的方法名,调用相应的方法
				//是否是String类的实例
				if(object instanceof String) {
					String str=(String)object;
					try {
						System.out.println("等待读取实体！");
						object = ois.readObject();
						System.out.println("读取实体成功！--"+object);
					} catch (ClassNotFoundException e) {
						e.printStackTrace();
					} catch (IOException e) {
						e.printStackTrace();
					}
					
					//是否是Person的实例
					if(object instanceof Person) {
						person=(Person)object;
						co.setPerson(person);
						/*//是否是User类的实例
						if(person instanceof User){
							User user=(User) person;
							
						}
						//是否是Manager类的实例
						if(person instanceof Manager) {
							Manager manager=(Manager) person;
							
						}*/
					}
					if(object instanceof Book){
						Book book = (Book) object;
						co.setBook(book);
					}
					//调用方法
					co.operation(str,ois,oos);
					//用户退出信息
					person=co.getPerson();
				}
		}
		
	}

}
