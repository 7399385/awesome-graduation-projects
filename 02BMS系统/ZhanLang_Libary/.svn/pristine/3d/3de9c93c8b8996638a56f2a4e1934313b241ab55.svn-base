package zhanlang.service.operate;

import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

import zhanlang.entity.Manager;
import zhanlang.entity.Person;
import zhanlang.entity.User;



public class ListenThread implements Runnable{
	private Socket socket;
	
	public ListenThread(Socket socket) {
		super();
		this.socket = socket;
	}
	/**
	 * 用来处理每个用户,每个用户一个线程
	 */
	@Override
	public void run() {
		while(true) {
				//输入流
				//接受客户端传过来的person对象
				//读一个对象
				Object object = null;
				ChooseOperation co=null;
				try {
					InputStream is=this.socket.getInputStream();
					ObjectInputStream ois = new ObjectInputStream(is);
					object = ois.readObject();
						System.out.println(((Person)object).getUserName()+"-"+((Person)object).getPassword()+"----------");
				} catch (ClassNotFoundException e) {
					e.printStackTrace();
				} catch (IOException e) {
					e.printStackTrace();
				}
			
				try {
					ObjectOutputStream oos=new ObjectOutputStream(this.socket.getOutputStream());
					oos.writeObject("true");
				} catch (IOException e) {
					e.printStackTrace();
				}
				
/*				//是否是Person的实例
				Person person = null;
				if(object instanceof Person) {
					person=(Person)object;
					//是否是User类的实例
					if(person instanceof User){
						User user=(User) person;
						
					}
					//是否是Manager类的实例
					if(person instanceof Manager) {
						Manager manager=(Manager) person;
						
					}
				}
				//输出流
				
				//实现根据传过来的方法名,调用相应的方法
				//是否是String类的实例
				if(object instanceof String) {

				}*/
		}
		
	}

}
