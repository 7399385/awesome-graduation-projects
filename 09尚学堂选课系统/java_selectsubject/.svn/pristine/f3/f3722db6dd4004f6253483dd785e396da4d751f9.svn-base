package com.bjxst.service;

import java.io.File;
import java.util.List;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;

import com.bjsxt.dao.TeacherDao;
import com.bjsxt.entity.Student;
import com.bjsxt.entity.Teacher;
import com.bjsxt.utils.Utils;

public class TeacherService {
	public static void main(String[] args) {
		TeacherService th=new TeacherService();
		th.addCourse("15","政治", "yubenling", "35");
		th.searchAllStuInfo("2224");
	}
	
	TeacherDao t=new TeacherDao();
	//老师查看个人的信息
	public String searchTeaId(String  id){
		StringBuffer b=new StringBuffer();
		try {
			 List<Teacher> teaList = t.getTeaList();
			 for(Teacher teacher:teaList){
				 if(id.equals(teacher.getId())){
					b.append(teacher.getId());
					b.append(teacher.getName());
					b.append(teacher.getPassword());
					b.append(teacher.getAge());
					b.append(teacher.getSex());
					b.append(teacher.getCourse());
				 }
			 }
			
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return b.toString();
	}
	
	//验证密码
	public boolean teaPW(String id,String password){
		boolean flag = false;
		try {
		flag=t.Validate(id, password);
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return flag;
	} 
	
	//b)添加课程
	/*
	 * private String id;
	   private String name;
	   private String teacher;
	   private String maxNum;
	 */
	 //课程名必须是老师的名字
	public void addCourse(String id,String name,String teacher,String maxNum){
		try {
			//在课程表中，添加课程
			Document doc = t.praseCourseXML();
			Element root = doc.getRootElement();
			Element course = root.addElement("course");
			course.addAttribute("ID", id);
			Element Ename = course.addElement("name");
			Ename.setText(name);
			Element Eteacher= course.addElement("teacher");
			Eteacher.setText(teacher);
			Element EmaxNum= course.addElement("maxNum");
			EmaxNum.setText(maxNum);
			Utils.ToXml(new File("courseXML.xml"), doc);
			//将课程添加到xml之后，就需要将uerxml中的老师的课程添加上
			t.addCourseOfTeacher(id, name);
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	//根据老师的id查看是这学生课程老师的id是teaID的
	public void searchAllStuInfo(String teaID){
		try {
			//所有的学生信息
			List<Student> students = t.getStudents();
			//获取该老师的所有的学生id
			List<String> stuList = t.praseCourseViewXml(teaID);
			for(String s:stuList){
				for(Student stu:students){
					if(s.equals(stu.getID())){
						System.out.println(stu);
					}
				}
				
				
			}
			
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	

}
